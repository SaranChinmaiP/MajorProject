var classCounter=1,classNameCounter="";const STATUS=document.getElementById("status"),VIDEO=document.getElementById("webcam"),ENABLE_CAM_BUTTON=document.getElementById("Cam"),RESET_BUTTON=document.getElementById("reset"),TRAIN_BUTTON=document.getElementById("train"),MOBILE_NET_INPUT_WIDTH=224,MOBILE_NET_INPUT_HEIGHT=224,STOP_DATA_GATHER=-1,CLASS_NAMES=[],EPOCHS_VALUE=document.getElementById("epochsValue"),CONSOLE_LOG=document.getElementById("consoleLog"),ADD_CLASS=document.getElementById("AddClass");ENABLE_CAM_BUTTON.addEventListener("click",enableCam),TRAIN_BUTTON.addEventListener("click",trainModel),RESET_BUTTON.addEventListener("click",reset);var epochParamter=EPOCHS_VALUE.value;EPOCHS_VALUE.addEventListener("keyup",(function(){epochParamter=EPOCHS_VALUE.value}));const ClassContainer=document.getElementsByClassName("btn-group-vertical");function createNewClass(){const newClassButton=document.createElement("button");newClassButton.style.textAlign="center",newClassButton.setAttribute("class","dataCollector btn btn-outline-secondary"),newClassButton.setAttribute("data-1hot",classCounter++),classNameCounter="Class "+classCounter,newClassButton.setAttribute("data-name",classNameCounter),newClassButton.innerText="Gather Class "+classCounter;const newClassName=document.createElement("input");newClassName.setAttribute("placeholder",classNameCounter),newClassName.value=classNameCounter,console.log("New Class Created "+classNameCounter),newClassName.setAttribute("class","nameCollector"),ClassContainer[0].appendChild(newClassName),ClassContainer[0].appendChild(newClassButton)}function FeedClassName(){CLASS_NAMES.length=0;let dataCollectorButtons=document.querySelectorAll("button.dataCollector"),nameCollector=document.querySelectorAll("input.nameCollector");for(let i=0;i<dataCollectorButtons.length;i++)dataCollectorButtons[i].addEventListener("mousedown",gatherDataForClass),dataCollectorButtons[i].addEventListener("mouseup",gatherDataForClass),console.log(nameCollector[i].value),CLASS_NAMES.push(nameCollector[i].value);modelCompile()}ADD_CLASS.addEventListener("click",FeedClassName);let mobilenet=void 0,gatherDataState=-1,videoPlaying=!1,trainingDataInputs=[],trainingDataOutputs=[],examplesCount=[],predict=!1;async function loadMobileNetFeatureModel(){const URL="https://tfhub.dev/google/tfjs-model/imagenet/mobilenet_v3_small_100_224/feature_vector/5/default/1";mobilenet=await tf.loadGraphModel(URL,{fromTFHub:!0}),STATUS.innerText="MobileNet v3 loaded successfully!",tf.tidy((function(){let answer=mobilenet.predict(tf.zeros([1,224,224,3]));console.log(answer.shape)}))}function modelCompile(){model.add(tf.layers.dense({units:CLASS_NAMES.length,activation:"softmax"})),model.summary(),model.compile({optimizer:"adam",loss:2===CLASS_NAMES.length?"binaryCrossentropy":"categoricalCrossentropy",metrics:["accuracy"]})}function hasGetUserMedia(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}function enableCam(){if(hasGetUserMedia()){const constraints={video:!0,width:380,height:380};navigator.mediaDevices.getUserMedia(constraints).then((function(stream){VIDEO.srcObject=stream,VIDEO.addEventListener("loadeddata",(function(){videoPlaying=!0,ENABLE_CAM_BUTTON.classList.add("removed")}))}))}else console.warn("getUserMedia() is not supported by your browser")}function gatherDataForClass(){let classNumber=parseInt(this.getAttribute("data-1hot"));gatherDataState=-1===gatherDataState?classNumber:-1,dataGatherLoop()}function calculateFeaturesOnCurrentFrame(){return tf.tidy((function(){let videoFrameAsTensor=tf.browser.fromPixels(VIDEO),resizedTensorFrame,normalizedTensorFrame=tf.image.resizeBilinear(videoFrameAsTensor,[224,224],!0).div(255);return mobilenet.predict(normalizedTensorFrame.expandDims()).squeeze()}))}function dataGatherLoop(){if(videoPlaying&&-1!==gatherDataState){let imageFeatures=calculateFeaturesOnCurrentFrame();trainingDataInputs.push(imageFeatures),trainingDataOutputs.push(gatherDataState),void 0===examplesCount[gatherDataState]&&(examplesCount[gatherDataState]=0),examplesCount[gatherDataState]++,STATUS.innerText="";for(let n=0;n<CLASS_NAMES.length;n++)STATUS.innerHTML+=CLASS_NAMES[n]+" data count: "+examplesCount[n]+". <br/>";window.requestAnimationFrame(dataGatherLoop)}}async function trainModel(){predict=!1,STATUS.innerHTML+="***TRAINING STARTED***",tf.util.shuffleCombo(trainingDataInputs,trainingDataOutputs);let outputsAsTensor=tf.tensor1d(trainingDataOutputs,"int32"),oneHotOutputs=tf.oneHot(outputsAsTensor,CLASS_NAMES.length),inputsAsTensor=tf.stack(trainingDataInputs),results=await model.fit(inputsAsTensor,oneHotOutputs,{shuffle:!0,batchSize:5,epochs:epochParamter,callbacks:{onEpochEnd:logProgress}});outputsAsTensor.dispose(),oneHotOutputs.dispose(),inputsAsTensor.dispose(),predict=!0}function logProgress(epoch,logs){CONSOLE_LOG.innerHTML=" ",console.log(epoch,logs),CONSOLE_LOG.innerHTML="Training data for epoch "+(epoch+1)}function predictLoop(){predict&&(tf.tidy((function(){let imageFeatures=calculateFeaturesOnCurrentFrame(),prediction=model.predict(imageFeatures.expandDims()).squeeze(),highestIndex=prediction.argMax().arraySync(),predictionArray=prediction.arraySync();STATUS.innerText="Prediction: "+CLASS_NAMES[highestIndex]+" with "+Math.floor(100*predictionArray[highestIndex])+"% confidence"})),window.requestAnimationFrame(predictLoop))}function reset(){predict=!1,examplesCount.splice(0);for(let i=0;i<trainingDataInputs.length;i++)trainingDataInputs[i].dispose();trainingDataInputs.splice(0),trainingDataOutputs.splice(0),STATUS.innerText="No Data collected",console.log("Tensors in memory: "+tf.memory().numTensors)}async function modelDownload(){await model.save("downloads://my-model")}loadMobileNetFeatureModel(),model=tf.sequential(),model.add(tf.layers.dense({inputShape:[1024],units:128,activation:"relu"}));